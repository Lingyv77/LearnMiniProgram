<!-- 1.使用自定义组件 -->
<my-cpn/>
<my-cpn/>
<my-style/>

<!-- 
  父 -> 子
  给自定义组件传递数据/样式
  componetn.js
  传递数据: properties{} 类似 vue中props使用
  传递样式: options: { styleIsolation: "shared"}  
    isolated 表示启用样式隔离，在自定义组件内外，使用 class 指定的样式将不会相互影响 default
    apply-shared 表示页面 wxss 样式将影响到自定义组件，但自定义组件 wxss 中指定的样式不会影响页面；
    shared 表示页面 wxss 样式将影响到自定义组件，自定义组件 wxss 中指定的样式也会影响页面和其他设置了 apply-shared 或 shared 的自定义组件。（这个选项在插件中不可用。）
 -->
<my-prop title="自定义prop标题" titleclass="blue"/>
<my-prop title="createWriteStream" titleclass="yellow"/>

<!-- 
  子 -> 父triggerEvent
  子 this.tringgerEvent("自定义事件", '传入参数')
  父 <my-event bind:自定义事件="func"/>
    func(event)  event {detail: '传递参数'}
 -->
 <view>当前计数: {{counter}}</view>
 <my-event bind:incurrement="handleIncurrement"/>
 <w-tab-control control="{{['流行','新款','精选']}}"
                bind:itemClick="handletabClick"/>

<!-- 
  父 -x- 子
  this.selectComponent('class/id') 类似vue中$refs
 -->
<my-sel id="my-sel"/>
<button size="mini" bindtap="handleSelClick">更改组件内数据</button>
<slider value="50"/> 

<!-- 
  插槽 多个插入(具名插槽)和单个插入 都类似vue 写法
  注意 使用具名插槽要配置
  options: {
    multipleSlots: true //在组件定义时的选项中启用多slot支持
  }
 -->
 <slot-test>
  <view slot="top">上</view>
  <view slot="center">中</view>
  <view slot="bottom">下</view>
 </slot-test>

